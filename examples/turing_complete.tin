fn void fizz
{
    print "fizz";
}

fn void buzz
{
    print "buzz";
}

fn i32 main
{
    // In general, for a language to be Turing-complete, it needs:
    // - A form of conditional repetition or conditional jump (e.g. while, if + goto)
    // - A way to read and write some form of storage
    
    i32 i = 0;
    while ( i < 10 )
    {
        /*
         * This isn't great but the stuff we need for a "real" itoa
         * (arrays, pointers) hasn't been implemented yet on the
         * backend
         */
        if ( i == 0 ) print "0";
        else if ( i == 1 ) print "1";
        else if ( i == 2 ) print "2";
        else if ( i == 3 ) print "3";
        else if ( i == 4 ) print "4";
        else if ( i == 5 ) print "5";
        else if ( i == 6 ) print "6";
        else if ( i == 7 ) print "7";
        else if ( i == 8 ) print "8";
        else if ( i == 9 ) print "9";
        else if ( i == 10 ) print "10";

        print ": ";

        if ( i % 3 == 0 )
        {
            fizz();
        }
        
        if ( i % 5 == 0 )
        {
            buzz();
        }

        if ( i % 3 == 0 || i % 5 == 0 )
        {
            print "\n";
        }

        i = i + 1;
    }

    return 0;
}